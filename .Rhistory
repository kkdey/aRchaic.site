tab1_filtered = tab1[match(c("A", "C", "G", "T"), names(tab1))]
tab1_filtered
tab1_filtered[1:10,]
plus_data[1:10,]
plus_data[1:30,]
minus_indices <-  which(data1[,6] == "-")
minus_data <- data1[minus_indices,]
tab2 = table(minus_data[,4])
tab2_filtered = tab2[match(c("A", "C", "G", "T"), names(tab2))]
tab2_filtered
minus_indices <-  which(data1[,6] == "-")
minus_data <- data1[minus_indices,]
tab2 = table(minus_data[,5])
tab2_filtered = tab2[match(c("A", "C", "G", "T"), names(tab2))]
tab2_filtered
tab1 = table(plus_data[,4])
tab1_filtered = tab1[match(c("A", "C", "G", "T"), names(tab1))]
tab1prop <- tab1_filtered/sum(tab1_filtered)
minus_indices <-  which(data1[,6] == "-")
minus_data <- data1[minus_indices,]
tab2 = table(minus_data[,5])
tab2_filtered = tab2[match(c("A", "C", "G", "T"), names(tab2))]
tab2prop <- tab2_filtered/sum(tab2_filtered)
ll <- list("left-strand-break" = tab1prop,
"right-strand-break" = tab2prop)
ll
plus_indices <-  which(data1[,6] == "+")
plus_data <- data1[plus_indices,]
tab1 = table(plus_data[,4])
tab1_filtered = tab1[match(c("A", "C", "G", "T"), names(tab1))]
tab1prop <- tab1_filtered/sum(tab1_filtered)
minus_indices <-  which(data1[,6] == "+")
minus_data <- data1[minus_indices,]
tab2 = table(minus_data[,5])
tab2_filtered = tab2[match(c("A", "C", "G", "T"), names(tab2))]
tab2prop <- tab2_filtered/sum(tab2_filtered)
ll <- list("left-strand-break" = tab1prop,
"right-strand-break" = tab2prop)
ll
data <- read.csv(file, header=FALSE)
# data1 <- data[ which(data[,2] < dist_from_ends | data[,3] < dist_from_ends), ]
data1 <- data[ which(data[,2] < dist_from_ends), ]
plus_indices <-  which(data1[,6] == "+")
plus_data <- data1[plus_indices,]
tab1 = table(plus_data[,4])
tab1_filtered = tab1[match(c("A", "C", "G", "T"), names(tab1))]
tab1prop <- tab1_filtered/sum(tab1_filtered)
tab1prop
plus_indices <-  which(data1[,6] == "+")
plus_data <- data1[plus_indices,]
tab1 = table(plus_data[,5])
tab1_filtered = tab1[match(c("A", "C", "G", "T"), names(tab1))]
tab1prop <- tab1_filtered/sum(tab1_filtered)
tab1prop
data1 <- data[ which(data[,2] < dist_from_ends), ]
rownames(data1)
data1[1:5,]
x <- data1[1,1]
x
paste0(strsplit(x, "[.]")[[1]][2:4], collapse="")
strsplit(x, "[.]")[[1]][2:4]
strsplit(as.character(x), "[.]")[[1]][2:4]
strsplit(as.character(x), "[.]")
strsplit(as.character(x), "[]")
strsplit(as.character(x), "[ ]")
strsplit(as.character(x), ".")
strsplit(as.character(x), "[.]")
as.character(x)
strsplit(as.character(x), "")
strsplit(as.character(x), "")[(flanking_bases+1):(flanking_bases+5)]
strsplit(as.character(x), "")[[1]][(flanking_bases+1):(flanking_bases+5)]
strsplit(as.character(x), "")[[1]][(flanking_bases+1):(flanking_bases+4)]
paste0(strsplit(as.character(x), "")[[1]][(flanking_bases+1):(flanking_bases+4)], collapse = "")
strand_breaks_composition <- function(file,
flanking_bases=1,
dist_from_ends = 10,
CtoT = TRUE){
data <- read.csv(file, header=FALSE)
# data1 <- data[ which(data[,2] < dist_from_ends | data[,3] < dist_from_ends), ]
data1 <- data[ which(data[,2] < dist_from_ends), ]
sig_split <- sapply(data1[,1],
function(x) return(paste0(strsplit(as.character(x), "")[[1]][(flanking_bases+1):(flanking_bases+4)], collapse = ""))
plus_indices <-  which(data1[,6] == "+")
if (CtoT){
CtoT_indices <- which(sig_split == "C->T")
total_indices <- intersect(CtoT_indices, plus_indices)
}else{
total_indices <- plus_indices
}
filtered_plus_data <- data1[total_indices,]
tab1 = table(filtered_plus_data[,4])
tab1_filtered = tab1[match(c("A", "C", "G", "T"), names(tab1))]
tab1prop <- tab1_filtered/sum(tab1_filtered)
minus_indices <-  which(data2[,6] == "-")
if (CtoT){
GtoA_indices <- which(sig_split == "G->A")
total_indices <- intersect(GtoA_indices, minus_indices)
}else{
total_indices <- minus_indices
}
filtered_minus_data <- data1[total_indices,]
tab2 = table(filtered_minus_data[,5])
tab2_filtered = tab2[match(c("A", "C", "G", "T"), names(tab2))]
tab2prop <- tab2_filtered/sum(tab2_filtered)
ll <- list("left-strand-break" = tab1prop,
"right-strand-break" = tab2prop)
return(ll)
}
sig_split <- sapply(data1[,1],
function(x) return(paste0(strsplit(as.character(x), "")[[1]][(flanking_bases+1):(flanking_bases+4)], collapse = ""))
)
sig_split <- sapply(data1[,1],
function(x) return(paste0(strsplit(as.character(x), "")[[1]][(flanking_bases+1):(flanking_bases+4)], collapse = "")))
strand_breaks_composition <- function(file,
flanking_bases=1,
dist_from_ends = 10,
CtoT = TRUE){
data <- read.csv(file, header=FALSE)
# data1 <- data[ which(data[,2] < dist_from_ends | data[,3] < dist_from_ends), ]
data1 <- data[ which(data[,2] < dist_from_ends), ]
sig_split <- sapply(data1[,1],
function(x) return(paste0(strsplit(as.character(x), "")[[1]][(flanking_bases+1):(flanking_bases+4)], collapse = "")))
plus_indices <-  which(data1[,6] == "+")
if (CtoT){
CtoT_indices <- which(sig_split == "C->T")
total_indices <- intersect(CtoT_indices, plus_indices)
}else{
total_indices <- plus_indices
}
filtered_plus_data <- data1[total_indices,]
tab1 = table(filtered_plus_data[,4])
tab1_filtered = tab1[match(c("A", "C", "G", "T"), names(tab1))]
tab1prop <- tab1_filtered/sum(tab1_filtered)
minus_indices <-  which(data2[,6] == "-")
if (CtoT){
GtoA_indices <- which(sig_split == "G->A")
total_indices <- intersect(GtoA_indices, minus_indices)
}else{
total_indices <- minus_indices
}
filtered_minus_data <- data1[total_indices,]
tab2 = table(filtered_minus_data[,5])
tab2_filtered = tab2[match(c("A", "C", "G", "T"), names(tab2))]
tab2prop <- tab2_filtered/sum(tab2_filtered)
ll <- list("left-strand-break" = tab1prop,
"right-strand-break" = tab2prop)
return(ll)
}
file <- "../data/Fu_2016/AfontovaGora3.archaic.q30.csv"
strand_breaks_composition(file, CtoT = TRUE, dist_from_ends = 5)
GtoA_indices <- which(sig_split == "G->A")
minus_indices <-  which(data2[,6] == "-")
total_indices <- intersect(GtoA_indices, minus_indices)
total_indices
GtoA_indices
data1 <- data[ which(data[,3] < dist_from_ends), ]
minus_indices <-  which(data2[,6] == "-")
data2 <- data[ which(data[,3] < dist_from_ends), ]
minus_indices <-  which(data2[,6] == "-")
minus_indices
GtoA_indices <- which(sig_split == "G->A")
total_indices <- intersect(GtoA_indices, minus_indices)
total_indices
strand_breaks_composition <- function(file,
flanking_bases=1,
dist_from_ends = 10,
CtoT = TRUE){
data <- read.csv(file, header=FALSE)
# data1 <- data[ which(data[,2] < dist_from_ends | data[,3] < dist_from_ends), ]
data1 <- data[ which(data[,2] < dist_from_ends), ]
sig_split <- sapply(data1[,1],
function(x) return(paste0(strsplit(as.character(x), "")[[1]][(flanking_bases+1):(flanking_bases+4)], collapse = "")))
plus_indices <-  which(data1[,6] == "+")
if (CtoT){
CtoT_indices <- which(sig_split == "C->T")
total_indices <- intersect(CtoT_indices, plus_indices)
}else{
total_indices <- plus_indices
}
filtered_plus_data <- data1[total_indices,]
tab1 = table(filtered_plus_data[,4])
tab1_filtered = tab1[match(c("A", "C", "G", "T"), names(tab1))]
tab1prop <- tab1_filtered/sum(tab1_filtered)
data2 <- data[ which(data[,3] < dist_from_ends), ]
minus_indices <-  which(data2[,6] == "-")
if (CtoT){
GtoA_indices <- which(sig_split == "G->A")
total_indices <- intersect(GtoA_indices, minus_indices)
}else{
total_indices <- minus_indices
}
filtered_minus_data <- data1[total_indices,]
tab2 = table(filtered_minus_data[,5])
tab2_filtered = tab2[match(c("A", "C", "G", "T"), names(tab2))]
tab2prop <- tab2_filtered/sum(tab2_filtered)
ll <- list("left-strand-break" = tab1prop,
"right-strand-break" = tab2prop)
return(ll)
}
file <- "../data/Fu_2016/AfontovaGora3.archaic.q30.csv"
strand_breaks_composition(file, CtoT = TRUE, dist_from_ends = 5)
strand_breaks_composition(file, CtoT = TRUE, dist_from_ends = 20)
file <- "../data/moderns_lite/HG00096.mapped.ILLUMINA.bwa.GBR.low_coverage.20120522.q30.csv"
strand_breaks_composition(file, CtoT = TRUE, dist_from_ends = 20)
left_strand_tab <- cbind.data.frame("purine"= tab1prop[c(1,3)],
"pyrimidine" = tab1prop[c(2,4)])
left_strand_tab
tab1prop[c(1,3)]
tab1prop[c(2,4)]
left_strand_tab <- rbind.data.frame("purine"= tab1prop[c(1,3)],
"pyrimidine" = tab1prop[c(2,4)])
left_strand_tab
left_strand_tab <- rbind(tab1prop[c(1,3)],
tab1prop[c(2,4)])
left_strand_tab
tab1prop[c(1,3)]
left_strand_tab <- rbind(c(tab1prop[c(1,3)], 0, 0),
c(0,0, tab1prop[c(2,4)]))
rownames(left_strand_tab) <- c("purine", "pyrimidine")
colnames(left_strand_tab) <- c("A", "G", "C", "T")
left_strand_tab
right_strand_tab <- rbind(c(tab2prop[c(1,3)], 0, 0),
c(0,0, tab2prop[c(2,4)]))
rownames(right_strand_tab) <- c("purine", "pyrimidine")
colnames(right_strand_tab) <- c("A", "G", "C", "T")
right_strand_tab
right_strand_tab <- t(right_strand_tab)
right_sr
right_strand_tab
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
logomaker(right_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 20,
xaxis_fontsize = 20,
col_line_split="black",
newpage=FALSE)
logomaker(right_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "5' strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 20,
xaxis_fontsize = 20,
col_line_split="black",
newpage=TRUE)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
logomaker(right_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "right strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 20,
xaxis_fontsize = 10,
col_line_split="black",
newpage=TRUE)
logomaker(right_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "right strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
left_strand_tab <- t(left_strand_tab)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
logomaker(left_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "left strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
data2 <- data[ which(data[,3] < dist_from_ends), ]
minus_indices <-  which(data2[,6] == "-")
if (CtoT){
GtoA_indices <- which(sig_split == "G->A")
total_indices <- intersect(GtoA_indices, minus_indices)
}else{
total_indices <- minus_indices
}
filtered_minus_data <- data1[total_indices,]
tab2 = table(filtered_minus_data[,5])
tab2_filtered = tab2[match(c("A", "C", "G", "T"), names(tab2))]
tab2prop <- tab2_filtered/sum(tab2_filtered)
right_strand_tab <- rbind(c(tab2prop[c(1,3)], 0, 0),
c(0,0, tab2prop[c(2,4)]))
rownames(right_strand_tab) <- c("purine", "pyrimidine")
colnames(right_strand_tab) <- c("A", "G", "C", "T")
right_strand_tab <- t(right_strand_tab)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
logomaker(right_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "right strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
strand_breaks_composition <- function(file,
flanking_bases=1,
dist_from_ends = 10,
CtoT = TRUE){
data <- read.csv(file, header=FALSE)
# data1 <- data[ which(data[,2] < dist_from_ends | data[,3] < dist_from_ends), ]
data1 <- data[ which(data[,2] < dist_from_ends), ]
sig_split <- sapply(data1[,1],
function(x) return(paste0(strsplit(as.character(x), "")[[1]][(flanking_bases+1):(flanking_bases+4)], collapse = "")))
plus_indices <-  which(data1[,6] == "+")
if (CtoT){
CtoT_indices <- which(sig_split == "C->T")
total_indices <- intersect(CtoT_indices, plus_indices)
}else{
total_indices <- plus_indices
}
filtered_plus_data <- data1[total_indices,]
tab1 = table(filtered_plus_data[,4])
tab1_filtered = tab1[match(c("A", "C", "G", "T"), names(tab1))]
tab1prop <- tab1_filtered/sum(tab1_filtered)
left_strand_tab <- rbind(c(tab1prop[c(1,3)], 0, 0),
c(0,0, tab1prop[c(2,4)]))
rownames(left_strand_tab) <- c("purine", "pyrimidine")
colnames(left_strand_tab) <- c("A", "G", "C", "T")
par(mfrow=c(1,2))
left_strand_tab <- t(left_strand_tab)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
logomaker(left_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "left strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
data2 <- data[ which(data[,3] < dist_from_ends), ]
minus_indices <-  which(data2[,6] == "-")
if (CtoT){
GtoA_indices <- which(sig_split == "G->A")
total_indices <- intersect(GtoA_indices, minus_indices)
}else{
total_indices <- minus_indices
}
filtered_minus_data <- data1[total_indices,]
tab2 = table(filtered_minus_data[,5])
tab2_filtered = tab2[match(c("A", "C", "G", "T"), names(tab2))]
tab2prop <- tab2_filtered/sum(tab2_filtered)
right_strand_tab <- rbind(c(tab2prop[c(1,3)], 0, 0),
c(0,0, tab2prop[c(2,4)]))
rownames(right_strand_tab) <- c("purine", "pyrimidine")
colnames(right_strand_tab) <- c("A", "G", "C", "T")
right_strand_tab <- t(right_strand_tab)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
logomaker(right_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "right strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
ll <- list("left-strand-break" = tab1prop,
"right-strand-break" = tab2prop)
return(ll)
}
par(mfrow=c(1,2))
left_strand_tab <- t(left_strand_tab)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
logomaker(left_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "left strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
left_strand_tab <- t(left_strand_tab)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
logomaker(left_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "left strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
par(mfrow=c(1,2))
left_strand_tab <- t(left_strand_tab)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
logomaker(left_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "left strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
left_strand_tab <- t(left_strand_tab)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
p2 <- logomaker(left_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "left strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
color_profile <- list("type" = "per_column",
"col" = c("blue", "red"))
p3 <- logomaker(right_strand_tab,
color_profile = color_profile,
hist=TRUE,
frame_width = 1,
ic.scale = TRUE,
yscale_change = TRUE,
pop_name = "right strand break",
xlab = "",
ylab = "",
yaxis=FALSE,
main_fontsize = 15,
xaxis_fontsize = 15,
col_line_split="black",
newpage=TRUE)
grid.arrange(p2,p3)
grid.arrange(grobs = list(p2,p3)0
grid.arrange(grobs = list(p2,p3))
source('~/Documents/aRchaic-old/R/strand_breaks_composition.R')
file <- "../data/moderns_lite/HG00096.mapped.ILLUMINA.bwa.GBR.low_coverage.20120522.q30.csv"
strand_breaks_composition(file, CtoT = TRUE, dist_from_ends = 20)
file <- "../data/Fu_2016/AfontovaGora3.archaic.q30.csv"
strand_breaks_composition(file, CtoT = TRUE, dist_from_ends = 20)
